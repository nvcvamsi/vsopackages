// Code generated by go-swagger; DO NOT EDIT.

package boundary_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hashicorp/hcp-sdk-go/clients/cloud-boundary-service/stable/2021-12-21/models"
	cloud "github.com/hashicorp/hcp-sdk-go/clients/cloud-shared/v1/models"
)

// MaintenanceWindowGetReader is a Reader for the MaintenanceWindowGet structure.
type MaintenanceWindowGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MaintenanceWindowGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMaintenanceWindowGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewMaintenanceWindowGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewMaintenanceWindowGetOK creates a MaintenanceWindowGetOK with default headers values
func NewMaintenanceWindowGetOK() *MaintenanceWindowGetOK {
	return &MaintenanceWindowGetOK{}
}

/*
MaintenanceWindowGetOK describes a response with status code 200, with default header values.

A successful response.
*/
type MaintenanceWindowGetOK struct {
	Payload *models.HashicorpCloudBoundary20211221MaintenanceWindowGetResponse
}

// IsSuccess returns true when this maintenance window get o k response has a 2xx status code
func (o *MaintenanceWindowGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this maintenance window get o k response has a 3xx status code
func (o *MaintenanceWindowGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this maintenance window get o k response has a 4xx status code
func (o *MaintenanceWindowGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this maintenance window get o k response has a 5xx status code
func (o *MaintenanceWindowGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this maintenance window get o k response a status code equal to that given
func (o *MaintenanceWindowGetOK) IsCode(code int) bool {
	return code == 200
}

func (o *MaintenanceWindowGetOK) Error() string {
	return fmt.Sprintf("[GET /boundary/2021-12-21/organizations/{location.organization_id}/projects/{location.project_id}/clusters/{cluster_id}/maintenance-window][%d] maintenanceWindowGetOK  %+v", 200, o.Payload)
}

func (o *MaintenanceWindowGetOK) String() string {
	return fmt.Sprintf("[GET /boundary/2021-12-21/organizations/{location.organization_id}/projects/{location.project_id}/clusters/{cluster_id}/maintenance-window][%d] maintenanceWindowGetOK  %+v", 200, o.Payload)
}

func (o *MaintenanceWindowGetOK) GetPayload() *models.HashicorpCloudBoundary20211221MaintenanceWindowGetResponse {
	return o.Payload
}

func (o *MaintenanceWindowGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HashicorpCloudBoundary20211221MaintenanceWindowGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMaintenanceWindowGetDefault creates a MaintenanceWindowGetDefault with default headers values
func NewMaintenanceWindowGetDefault(code int) *MaintenanceWindowGetDefault {
	return &MaintenanceWindowGetDefault{
		_statusCode: code,
	}
}

/*
MaintenanceWindowGetDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type MaintenanceWindowGetDefault struct {
	_statusCode int

	Payload *cloud.GrpcGatewayRuntimeError
}

// Code gets the status code for the maintenance window get default response
func (o *MaintenanceWindowGetDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this maintenance window get default response has a 2xx status code
func (o *MaintenanceWindowGetDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this maintenance window get default response has a 3xx status code
func (o *MaintenanceWindowGetDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this maintenance window get default response has a 4xx status code
func (o *MaintenanceWindowGetDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this maintenance window get default response has a 5xx status code
func (o *MaintenanceWindowGetDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this maintenance window get default response a status code equal to that given
func (o *MaintenanceWindowGetDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *MaintenanceWindowGetDefault) Error() string {
	return fmt.Sprintf("[GET /boundary/2021-12-21/organizations/{location.organization_id}/projects/{location.project_id}/clusters/{cluster_id}/maintenance-window][%d] MaintenanceWindowGet default  %+v", o._statusCode, o.Payload)
}

func (o *MaintenanceWindowGetDefault) String() string {
	return fmt.Sprintf("[GET /boundary/2021-12-21/organizations/{location.organization_id}/projects/{location.project_id}/clusters/{cluster_id}/maintenance-window][%d] MaintenanceWindowGet default  %+v", o._statusCode, o.Payload)
}

func (o *MaintenanceWindowGetDefault) GetPayload() *cloud.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *MaintenanceWindowGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(cloud.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
