// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HashicorpCloudIamCreateOrganizationServicePrincipalKeyRequest CreateOrganizationServicePrincipalKeyRequest is the request message used when creating a
// service principal key for a principal on organization level.
//
// swagger:model hashicorp.cloud.iam.CreateOrganizationServicePrincipalKeyRequest
type HashicorpCloudIamCreateOrganizationServicePrincipalKeyRequest struct {

	// organization_id is the unique identifier (UUID) of the organization under
	// which the service principal key should be created.
	// It must be the organization of the provided service principal.
	OrganizationID string `json:"organization_id,omitempty"`

	// principal_id is the ID of the service principal for which the new service
	// principal key should be created.
	PrincipalID string `json:"principal_id,omitempty"`
}

// Validate validates this hashicorp cloud iam create organization service principal key request
func (m *HashicorpCloudIamCreateOrganizationServicePrincipalKeyRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this hashicorp cloud iam create organization service principal key request based on context it is used
func (m *HashicorpCloudIamCreateOrganizationServicePrincipalKeyRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *HashicorpCloudIamCreateOrganizationServicePrincipalKeyRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HashicorpCloudIamCreateOrganizationServicePrincipalKeyRequest) UnmarshalBinary(b []byte) error {
	var res HashicorpCloudIamCreateOrganizationServicePrincipalKeyRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
